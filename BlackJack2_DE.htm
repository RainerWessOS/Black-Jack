<!DOCTYPE html>
<html lang="de">
<head>
   <meta charset="utf-8" />
   <title>17 + 4 : Das Spiel</title>
   <meta name="author" content="Rainer Wess" />
   <meta name="description" content="17 + 4 Spiel realisiert mit JavaScript, HTML5 und CSS" />
   <meta name="keywords" content="Spiel,Kartenspiel,17+4,siebzehn und vier,Touch,Handy App,open source,GPL, freeware,HTML,CSS,JavaScript" />

   <meta name="viewport" content="width=device-width, initial-scale=1.0" />

<style>

/* 
   I have reduced the margins-height     
   of some elements to look nicer on    
   the Sololearn mobile App. To play 
   it standlone you may stretch it a 
   little bit in Y-direction.
*/

body {
   width: 360px;
   margin: auto;
   font: 16px Arial;
   font-weight: bold;
   background-color: darkgreen;
   overflow: hidden;
   /* disabling content selection */
   user-select: none; 
   -moz-user-select: none; 
   -khtml-user-select: none; 
   -ms-user-select: none; 
   -webkit-user-select: none;
}

#game {
   margin: 20px;
   overflow: hidden;
}

.header {
   font-size: 32px;
   color: red;
   text-align: center;
   text-shadow: -1px 0 white, 0 1px white, 1px 0 white, 0 -1px white;
   margin-left: 15px;
}

.helpBtn {
   font-size: 22px;
   color: deepskyblue;
   float: right;
   text-align:center;
   width:30px;
   height:30px;
   border:1px solid;
   border-color: white;
   border-radius: 5px;
   margin-top:5px;
   
}
.players {
   font-size: 20px;
   color: white;
   margin-top: 35px;
}

#info, #busted {
   text-align: left;
   margin-left: 40px;
}

#points_cpu, #points_usr {
   float: right;
   text-align: right;
}

.tables {
   display: flex;
   flex-direction: row;
   justify-content: space-between;
   margin-top: 20px;
   margin-bottom: 40px;
}

.places {
   height: 81px;
   width: 56px;
}

#controls {
   display: flex;
   flex-direction: row;
   justify-content: space-between;
   margin-top: 50px;
   margin-bottom: 3px;
   margin-right: 3px;
}

.btn {
   font-size: 16px;
   color: white;
   font-weight: bold;
   border-color: white;
   border-radius: 5px;
   -webkit-box-shadow: 3px 3px #303030;
   -moz-box-shadow: 3px 3px #303030;
   box-shadow: 3px 3px #303030;
   height: 35px;
}

#takeBtn {
      background-color: green;
}

#standBtn {
      background-color: red;
}

#newBtn {
      background-color: black;
}

.help_page {
  z-index: 5;
  position: absolute;
  display:none;
  top:0px;
  left:0px;
  height: 100%;
  margin: 20px;
  color: white;
  background-color: darkgreen;
}

.help_header {
   font-size: 20px;
   margin-top: 35px;
   margin-bottom: 10px;
}

.help_nav {
   font-size: 18px;
   color: deepskyblue;
   float: right;
   text-align:center;
   width:25px;
   height:25px;
   border:1px solid;
   border-color: white;
   border-radius: 5px;
}
</style>

<script>
	
   /*
     Black Jack - (17 und 4) 
     Copyright Rainer Wess 2018
     Made in Germany 🇩🇪
     
     Open Source / Freeware
     Released under GNU GPL 3.0
     You can download it from
     github, search RainerWessOS
   */

   globals: {

      var points_usr;
      var points_cpu;
      var sum_usr;
      var sum_cpu;
      var place_usr;
      var place_cpu;
      var randNum;
      var running;
      var i;
      var ani;
      var intA;
      var intTC = [];
      var card = [];
      var card_value = [];
      var revcard;
      var nocard;
   }

for (i = 0; i <= 51; i++) {
   card[i] = new Image();
   card[i].src = "cards/card" + i + ".png";
   card[i].style.height = "80px";
   card[i].style.width = "55px";
}

revcard = new Image();
revcard.src = "cards/reverse.png";

nocard = new Image();
nocard.src = "cards/nocard.png";

card_value = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10];

function id(id) {
   return document.getElementById(id);
}

function hide(sid) {
	id(sid).style.display = "none";
}

function show(sid) {
	id(sid).style.display = "block";
}

function hide1(hid) {
    id(hid).style.visibility = "hidden";
}

function show1(sid) {
	id(sid).style.visibility = "visible";
}

function setText(sid, txt) {
   id(sid).innerHTML = txt;
}

function setColor(sid, color) {
   id(sid).style.color = color;
}

function setImg(pn, num) {

   id("place" + pn).src = card[num].src;
   id("place" + pn).style.boxShadow = "1px 1px 1px #303030";
}

function aniWin() {

   ani = (ani) ? false : true;
   if (ani) setColor("info", "darkgreen");
   else setColor("info", "gold");
}

function randomNumber(min, max) {
   return Math.floor(Math.random() * (max - min + 1)) + min;
}

function enableButtons() {

   id("takeBtn").disabled = false;
   id("standBtn").disabled = false;
}

function disableButtons() {

   id("takeBtn").disabled = true;
   id("standBtn").disabled = true;
   id("newBtn").disabled = true;
}

/*
function toggleHelp(page) {
	var hp = "help1";
	// if( page !== "undefined" ) hp = page;
    id(hp).style.display == "none" ? show(hp) : hide(hp);
       // id("help_nav").addEventListener("click", toggleHelp2);
}
function toggleHelp2() {
	var hp = "help2";
    id(hp).style.visibility == "hidden" ? show(hp) : hide(hp);
}
*/

function init() {

   points_usr = 0;
   setText("points_usr", points_usr);
   points_cpu = 0;
   setText("points_cpu", points_cpu);
   // id("helpBtn").addEventListener("click", toggleHelp);
   newGame();
}

function newGame() {

   sum_usr = 0;
   sum_cpu = 0;
   place_usr = 0;
   place_cpu = 5;
   ani = false;
   running = true;

   id("newBtn").blur();
   disableButtons();

   if (intA) clearInterval(intA);

   setText("busted", " ");
   setText("info", " ");
   setText("cpu", "0");
   setText("you", "0");
   setColor("info", "white");

   for (i = 0; i <= 9; i++) {
      id("place" + i).src = nocard.src;
      id("place" + i).style.boxShadow = "none";
   }

   setTimeout(showReversedCard, 500);
   setTimeout(cpuTakeCard, 1000);
   setTimeout(usrTakeCard, 1500);
   setTimeout(enableButtons, 1600);
}

function showReversedCard() {

   id("place6").src = revcard.src;
   id("place6").style.boxShadow = "1px 1px 1px #303030";
}

function usrTakeCard() {

   id("takeBtn").blur();

   if (running) {
   
      if (sum_usr <= 21) {
         setText("info", " ");
         randNum = randomNumber(0, 51);
         setImg(place_usr, randNum);
         place_usr++;
         sum_usr += card_value[randNum % 13];
         setText("you", sum_usr);
      }
      
      if (sum_usr > 20) {
         disableButtons();
         whoWins();
      }
      // in rare cases five cards are not enough 
      // ToDo: shift the drawn cards in the places, if more cards needed then places available, but for now we reuse the last place
      if (place_usr > 4) place_usr--;
   }
}

function cpuTakeCard() {

   if (running) {
   
      if ((sum_cpu < 19 && sum_cpu < sum_usr) || (sum_cpu < 16 && sum_cpu == sum_usr)) {

         randNum = randomNumber(0, 51);
         setImg(place_cpu, randNum);
         place_cpu++;
         sum_cpu += card_value[randNum % 13];
         setText("cpu", sum_cpu);
         
         if (place_cpu > 9) {

            // in rare cases five cards are not enough then the last place is reused
            place_cpu--;
            intTC[0] = setTimeout(cpuTakeCard, 1000);
         }
      }
      else whoWins();
   }
}

function stand() {

   // computers turn      
   var wait = 0;

   id("standBtn").blur();

   if (sum_usr > 9) {

      disableButtons();
      
      if (sum_cpu > sum_usr) whoWins();

      for (i = 0; i < 4; i++) {
      
         if (sum_usr > sum_cpu && sum_cpu < 19) {
            intTC[i] = setTimeout(cpuTakeCard, wait);
            wait += 1000;
         }
      }
   }
   else setText("info", "💻 sagt NEIN!");
}

function youWin() {

   setColor("info", "gold");
   setText("info", "Du hast gewonnen!");
   intA = setInterval(aniWin, 700);
}

function youLose() {

   setText("info", "Du hast verloren.");
}

function whoWins() {

   if (running) {
   
      if (sum_usr > 21 || (sum_cpu <= 21 && sum_cpu > sum_usr && sum_usr > 0)) {
      
         running = false;
         
         if (sum_usr > 21) {
            setText("info", "zuviel");
            setTimeout(youLose, 800);
         }
         
         else youLose();
         points_cpu += 1;
         setText("points_cpu", points_cpu);
      }
      
      else if (sum_cpu > 21 || sum_usr == 21 || (sum_usr <= 21 && sum_usr > sum_cpu)) {
      
         running = false;
         
         if (sum_cpu > 21) {
            setText("busted", "* zuviel *");
            setTimeout(youWin, 500);
         }
         else if (sum_usr == 21) {
            setTimeout(youWin, 500);
         }
         else youWin();
         points_usr += 1;
         setText("points_usr", points_usr);
      }
      else if (sum_cpu > 0 && sum_usr == sum_cpu) {
      
         running = false;
         
         setColor("info", "white")
         setText("info", "Unentschieden!");
      }

      if (!running) {

         id("newBtn").disabled = false;

         for (i = 0; i < intTC.length; i++) {
            if (intTC[i]) clearTimeout(intTC[i]);
         }
      }
   }
}

// END

</script>

</head>

<body onload="init()">

   <div id="game">
      
      <div><span class="header">17 + 4 : Das Spiel</span><span class="helpBtn" onclick="show('help1')">?</span>
   </div>

      <div class="players">GINA : <span id="cpu">0</span> <span id="busted"> </span><span id="points_cpu">0</span>
      </div>

      <div class="tables">
         <div class="places"><img id="place6" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place5" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place7" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place8" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place9" src="cards/nocard.png" alt="" /></div>
      </div>

      <div class="players">DU : <span id="you">0</span> <span id="info"> </span><span id="points_usr">0</span>
    </div>

      <div class="tables">
         <div class="places"><img id="place0" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place1" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place2" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place3" src="cards/nocard.png" alt="" /></div>
         <div class="places"><img id="place4" src="cards/nocard.png" alt="" /></div>
      </div>

      <div id="controls">
         <div>
            <button id="takeBtn" class="btn" onclick="usrTakeCard()">Karte nehmen</button>
         </div>
         <div>
            <button id="standBtn" class="btn" onclick="stand()">Genug</button>
         </div>
         <div>
            <button id="newBtn" class="btn" onclick="newGame()">Neues Spiel</button>
         </div>
      </div>
      
      <div id="help1" class="help_page">
      	      <div><span class="header">17 + 4 : Das Spiel</span><span class="helpBtn" onclick="hide('help1');hide('help2')">X</span></div>
      	      <div class="help_header">
     <span>Anleitung</span><span class="help_nav" onclick="hide('help1');show('help2')">></span></div><div>Sinn des Spiels ist zu gewinnen. 😀 Du spielst hier gegen einen echten Profi, die Gina.<p>Ziel des Spiels ist es, mit zwei oder mehr Karten n&auml;her an 21 Punkte heranzukommen als deine Mitspielerin, idealerweise genau 21 Punkte zu bekommen. Aber &uuml;bertreibe es nicht, denn wenn ein Spieler 21 Punkte &uuml;berschreitet sind es zuviel und  er hat verloren. <p>Weil die Gina so verdammt gut spielt muss sie eine Karte von sich umdrehen, so das du sie sehen und einsch&auml;tzen kannst, ob du schon genug Punkte hast, oder es riskieren solltest noch eine Karte zu nehmen.
     </div>
        </div>
        
           <div id="help2" class="help_page">
           	      	      <div><span class="header">17 + 4 : Das Spiel</span><span class="helpBtn" onclick="hide('help1');hide('help2')">X</span></div>
      	      <div class="help_header">
     <span>Anleitung ( 2 )</span><span class="help_nav" onclick="hide('help2');show('help1')">&lt;</span></div><div>Wenn du genau 21 Punkte bekommst gewinnst du sofort, das ist nat&uuml;rlich das Beste, denn dann kommt die Gina gar nicht zum Zug.<p>
Viel Spaß beim Spielen!<p>
&nbsp;<p>

Spielentwicklung/Programmierung:<br>©️ Rainer Wess - 2018
<p>
Das Spiel ist Open Source / Freeware und wurde unter der GNU GPL 3.0 ver&ouml;ffentlicht.
<p>
Das heißt du kannst damit machen was du willst, es nutzen oder weitergeben solange der Urheber und die Lizenz genannt sind.
</div>
   </div>
      </div>
</body>

</html>
